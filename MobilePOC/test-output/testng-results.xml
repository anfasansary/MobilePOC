<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-01-16T14:24:13 IST" name="Default suite" finished-at="2021-01-16T14:24:13 IST" duration-ms="714">
    <groups>
    </groups>
    <test started-at="2021-01-16T14:24:13 IST" name="Default test" finished-at="2021-01-16T14:24:13 IST" duration-ms="714">
      <class name="testcases.TC01_BuyProductCycle">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:testcases.TC01_BuyProductCycle@5acf93bb]" started-at="2021-01-16T14:24:12 IST" name="beforeSuite" finished-at="2021-01-16T14:24:13 IST" duration-ms="537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:testcases.TC01_BuyProductCycle@5acf93bb]" started-at="2021-01-16T14:24:13 IST" name="beforeTest" finished-at="2021-01-16T14:24:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="setValues()[pri:0, instance:testcases.TC01_BuyProductCycle@5acf93bb]" started-at="2021-01-16T14:24:13 IST" name="setValues" finished-at="2021-01-16T14:24:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setValues -->
        <test-method signature="verifyBuyProductCycle(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.TC01_BuyProductCycle@5acf93bb]" started-at="2021-01-16T14:24:13 IST" name="verifyBuyProductCycle" data-provider="fetchData" finished-at="2021-01-16T14:24:13 IST" duration-ms="685" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void testcases.TC01_BuyProductCycle.verifyBuyProductCycle(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: verifyBuyProductCycle([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) emulator-5554,null,(java.lang.String) anfas.kari@gmail.com,(java.lang.String) Abcd@12345,(java.lang.String) Samsung UN65KS9000 65-Inch 4K Ultra HD Smart LED TV (2016 Model),(java.lang.String) Samsung Electronics,(java.lang.String) ,(java.lang.String) ]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void testcases.TC01_BuyProductCycle.verifyBuyProductCycle(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: verifyBuyProductCycle([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) emulator-5554,null,(java.lang.String) anfas.kari@gmail.com,(java.lang.String) Abcd@12345,(java.lang.String) Samsung UN65KS9000 65-Inch 4K Ultra HD Smart LED TV (2016 Model),(java.lang.String) Samsung Electronics,(java.lang.String) ,(java.lang.String) ]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:905)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBuyProductCycle -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testcases.TC01_BuyProductCycle@5acf93bb]" started-at="2021-01-16T14:24:13 IST" name="afterTest" finished-at="2021-01-16T14:24:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:testcases.TC01_BuyProductCycle@5acf93bb]" started-at="2021-01-16T14:24:13 IST" name="afterSuite" finished-at="2021-01-16T14:24:14 IST" duration-ms="351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testcases.TC01_BuyProductCycle -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
